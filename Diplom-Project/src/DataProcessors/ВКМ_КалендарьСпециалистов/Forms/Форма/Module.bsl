
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дата = ТекущаяДатаСеанса();
	
	СоздатьИзмерениеПланировщикаСпециалист();
	
	ОбновитьПериодОтображенияПланировщика();
	
	ЗаполнитьКалендарьСпециалистов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеЗаявки_ОбслуживаниеКлиента" Тогда
		ЗаполнитьКалендарьСпециалистов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьПериодОтображенияПланировщика();
	
	ЗаполнитьКалендарьСпециалистов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ДатаПроведенияРабот", Начало);
	ЗначенияЗаполнения.Вставить("ВремяНачалаРабот", Начало);
	ЗначенияЗаполнения.Вставить("ВремяОкончанияРабот", Конец);
	ЗначенияЗаполнения.Вставить("Специалист", ЗначенияИзмерений["Специалист"]);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.ВКМ_ОбслуживаниеКлиента.ФормаОбъекта", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранныйЭлементПланировщика = Элемент.ВыделенныеЭлементы;
	ЭлементПланировщика = ВыбранныйЭлементПланировщика[0];
	СтруктураПараметров = Новый Структура("Ключ", ЭлементПланировщика.Значение);
	
	ОткрытьФорму("Документ.ВКМ_ОбслуживаниеКлиента.ФормаОбъекта", СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	
	ВыбранныйЭлементПланировщика = Элемент.ВыделенныеЭлементы;
	ЭлементПланировщика = ВыбранныйЭлементПланировщика[0];
	
	ЗначенияРеквизитов = Новый Структура;
	ЗначенияРеквизитов.Вставить("Специалист", ЭлементПланировщика.ЗначенияИзмерений["Специалист"]);
	ЗначенияРеквизитов.Вставить("ДатаПроведенияРабот", ЭлементПланировщика.Начало);
	ЗначенияРеквизитов.Вставить("ВремяНачалаРабот", ЭлементПланировщика.Начало);
	ЗначенияРеквизитов.Вставить("ВремяОкончанияРабот", ЭлементПланировщика.Конец);
	
	ОбновитьДанныеЗаявкиИзПланировщика(ЭлементПланировщика.Значение, ЗначенияРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИзмерениеПланировщика

&НаСервере
Процедура СоздатьИзмерениеПланировщикаСпециалист()
	
	ИзмерениеПланировщика = Планировщик.Измерения.Добавить("Специалист");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_Сотрудники.Ссылка КАК Ссылка,
	|	ВКМ_Сотрудники.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ВКМ_Сотрудники КАК ВКМ_Сотрудники
	|ГДЕ
	|	НЕ ВКМ_Сотрудники.ПометкаУдаления
	|	И ВКМ_Сотрудники.Категория = &КатегорияСотрудника";
	
	Запрос.УстановитьПараметр("КатегорияСотрудника", Справочники.ВКМ_КатегорииСотрудников.Специалисты);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЗначениеИзмерения = ИзмерениеПланировщика.Элементы.Добавить(Выборка.Ссылка);
		ЗначениеИзмерения.Текст = Выборка.Наименование;
		ЗначениеИзмерения.ЦветРамки = WebЦвета.ТемноБирюзовый;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПериодПланировщика

&НаСервере
Процедура ОбновитьПериодОтображенияПланировщика()
	
	ВремяНачалаРабочегоДня = 9*3600;
	ВремяОкончанияРабочегоДня = 20*3600;
	
	НачалоРабочегоДня = НачалоДня(Дата) + ВремяНачалаРабочегоДня;
	КонецРабочегоДня = НачалоДня(Дата) + ВремяОкончанияРабочегоДня;
	
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоРабочегоДня, КонецРабочегоДня);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнитьКалендарьСпециалистов

&НаСервере
Процедура ЗаполнитьКалендарьСпециалистов()
	
	Планировщик.Элементы.Очистить();
	
	Выборка = ДанныеДляКалендаряСпециалистов();
	
	Пока Выборка.Следующий() Цикл
		
		НачалоРабот = Неопределено;
		ОкончаниеРабот = Неопределено;
		ПолучитьНачалоКонецДляПланировщика(Выборка, НачалоРабот, ОкончаниеРабот);
		
		СоответствиеИзмерения = Новый Соответствие;
		СоответствиеИзмерения.Вставить("Специалист", Выборка.Специалист);
		
		МассивПредставление = ПолучитьТекстДляПланировщика(Выборка);
		
		ЭлементПланировщика = Планировщик.Элементы.Добавить(НачалоРабот, ОкончаниеРабот);
		ЭлементПланировщика.ЗначенияИзмерений = Новый ФиксированноеСоответствие(СоответствиеИзмерения);
		ЭлементПланировщика.Значение = Выборка.Ссылка;
		ЭлементПланировщика.Текст = Новый ФорматированнаяСтрока(МассивПредставление);
		
		Цвет = Выборка.ЦветДокументаКалендарь.Получить();
		//@skip-check new-color
		Если Цвет = Неопределено Или Цвет = Новый Цвет (0, 0, 0) Тогда
			Цвет = WebЦвета.БледноБирюзовый;
		КонецЕсли;
		
		ЭлементПланировщика.ЦветФона = Цвет;
		
	КонецЦикла;
	
	ЗаполнитьДиаграммуФинансы();
	
КонецПроцедуры

&НаСервере
Функция ДанныеДляКалендаряСпециалистов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка,
	|	ВКМ_ОбслуживаниеКлиента.Номер КАК Номер,
	|	ВКМ_ОбслуживаниеКлиента.Дата КАК Дата,
	|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
	|	ВКМ_ОбслуживаниеКлиента.Клиент.Наименование КАК КлиентНаименование,
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот КАК ВремяНачалаРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот КАК ВремяОкончанияРабот,
	|	ВКМ_ОбслуживаниеКлиента.ОписаниеПроблемы КАК ОписаниеПроблемы,
	|	ВКМ_ОбслуживаниеКлиента.ЦветДокументаКалендарь КАК ЦветДокументаКалендарь
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	НЕ ВКМ_ОбслуживаниеКлиента.ПометкаУдаления
	|	И ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот МЕЖДУ &ДатаНачалоДня И &ДатаКонецДня
	|	И ВКМ_ОбслуживаниеКлиента.Проведен";
	
	Запрос.УстановитьПараметр("ДатаНачалоДня", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаКонецДня", КонецДня(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка;
	
КонецФункции

&НаСервере
Процедура ПолучитьНачалоКонецДляПланировщика(Выборка, НачалоРабот, ОкончаниеРабот)
	
	ДатаСтрока = Формат(Выборка.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy");
	ВремяНачалоСтрока = Формат(Выборка.ВремяНачалаРабот, "ДФ=ЧЧ:мм:сс");
	ВремяКонецСтрока = Формат(Выборка.ВремяОкончанияРабот, "ДФ=ЧЧ:мм:сс");
	
	ДатаВремяНачало = СтрШаблон("%1 %2", ДатаСтрока, ВремяНачалоСтрока);
	ДатаВремяКонец = СтрШаблон("%1 %2", ДатаСтрока, ВремяКонецСтрока);
	
	НачалоРабот = Дата(ДатаВремяНачало);
	ОкончаниеРабот = Дата(ДатаВремяКонец);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстДляПланировщика(Выборка)
	
	МассивПредставление = Новый Массив;
	
	//@skip-check new-font
	ЖирныйШрифт = Новый Шрифт(,,Истина);
	//@skip-check new-font
	КурсивШрифт = Новый Шрифт(,,,Истина);
	//@skip-check new-font
	ПодчеркнутыйШрифт = Новый Шрифт(,,,,Истина);
	
	НомерБезНулей = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Выборка.Номер, "0");
	ДатаДокумента = Формат(Выборка.Дата, "ДФ=dd.MM.yyyy");
	ШаблонЗаявка = "Заявка №%1 от %2";
	ПредставлениеЗаявки = СтрШаблон(ШаблонЗаявка, НомерБезНулей, ДатаДокумента);
	МассивПредставление.Добавить(Новый ФорматированнаяСтрока(ПредставлениеЗаявки, ЖирныйШрифт));
	
	МассивПредставление.Добавить(Символы.ПС);
	ШаблонКлиент = "Клиент: %1";
	ПредставлениеКлиент = СтрШаблон(ШаблонКлиент, Выборка.КлиентНаименование);
	МассивПредставление.Добавить(Новый ФорматированнаяСтрока(ПредставлениеКлиент, КурсивШрифт));
	
	МассивПредставление.Добавить(Символы.ПС);
	ТекстДатаПроведения = "Дата проведения работ:";
	МассивПредставление.Добавить(ТекстДатаПроведения);
	МассивПредставление.Добавить(Символы.ПС);
	ДатаПроведения = Формат(Выборка.ДатаПроведенияРабот, "ДЛФ=DD");
	МассивПредставление.Добавить(Новый ФорматированнаяСтрока(ДатаПроведения, ПодчеркнутыйШрифт));
	
	Если ЗначениеЗаполнено(Выборка.ОписаниеПроблемы) Тогда
		МассивПредставление.Добавить(Символы.ПС);
		ТекстОписаниеПроблемы = "Описание проблемы:";
		МассивПредставление.Добавить(ТекстОписаниеПроблемы);
		МассивПредставление.Добавить(Символы.ПС);
		МассивПредставление.Добавить(Новый ФорматированнаяСтрока(Выборка.ОписаниеПроблемы, ПодчеркнутыйШрифт));
	КонецЕсли;
	
	Возврат МассивПредставление;
	
КонецФункции

#КонецОбласти

#Область ОбновитьДанныеЗаявки

&НаСервереБезКонтекста
Процедура ОбновитьДанныеЗаявкиИзПланировщика(ЗначениеДокумента, ЗначенияРеквизитов)
	
	ОбъектДокументОбслуживаниеКлиента = ЗначениеДокумента.ПолучитьОбъект();
	
	ЕстьИзменения = Ложь;
	Для каждого Реквизит Из ЗначенияРеквизитов Цикл
		Если ОбъектДокументОбслуживаниеКлиента[Реквизит.Ключ] <> Реквизит.Значение Тогда
			ЕстьИзменения = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		ЗаполнитьЗначенияСвойств(ОбъектДокументОбслуживаниеКлиента, ЗначенияРеквизитов);
		ОбъектДокументОбслуживаниеКлиента.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнитьДиаграммуФинансы

&НаСервере
Процедура ЗаполнитьДиаграммуФинансы()
	
	Диаграмма.Обновление = Ложь;
	Диаграмма.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник.Наименование КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания, , ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Точка = Диаграмма.Точки.Добавить("");
	Пока Выборка.Следующий() Цикл
		
		Серия = Диаграмма.Серии.Добавить(Выборка.Сотрудник);
		Диаграмма.УстановитьЗначение(Точка, Серия, Выборка.Сумма);
		
	КонецЦикла;
	
	Диаграмма.Обновление = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти