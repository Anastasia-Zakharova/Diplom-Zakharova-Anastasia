
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыборГод = Год(ТекущаяДатаСеанса());
	ВыборМесяц = Месяц(ТекущаяДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВыбранныйПериод();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ВыборПериода

&НаКлиенте
Процедура ПлюсГод_ПГ(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура МинусГод_МГ(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км01(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км02(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км03(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км04(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км05(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км06(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км07(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км08(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км09(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км10(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км11(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

&НаКлиенте
Процедура км12(Команда)
	ВыбраннаяКоманда = Команда;
	ВыбратьПериод(ВыбраннаяКоманда);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Заполнить(Команда)
	
	ДанныеКонстант = ПолучитьДанныеКонстант();
	
	Если ДанныеКонстант.ЕстьКонстантыНоменклатуры Тогда
		
		ДлительнаяОперация = ЗаполнитьНаСервере();
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьОповещениеОЗавершении",ЭтотОбъект);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
		ПараметрыОжидания.Интервал = 1;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	Иначе
		
		ТекстСообщения = "Заполните констаты номенклатуры для автоматического создания актов";
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		ОткрытьФорму("ОбщаяФорма.ВКМ_ФормаКонстантНоменклатура");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьВыбранныйПериод()
	
	Объект.Период = Дата(ВыборГод, ВыборМесяц, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ДанныеКоманды = Прав(Команда.Имя, 2);
	
	Если Прав(ДанныеКоманды, 1) = "Г" Тогда
		Если Лев(ДанныеКоманды, 1) = "П" Тогда
			ВыборГод = ВыборГод + 1;
		Иначе
			ВыборГод = ВыборГод - 1;
		КонецЕсли;
		ОбновитьВыбранныйПериод();
		Возврат;
	КонецЕсли;
	
	Если ДанныеКоманды <> "ВБ" Тогда
		ВыборМесяц = Число(Прав(Команда.Имя, 2));
		ОбновитьВыбранныйПериод();
		Элементы.ДекорацияВыбранныйПериод.Видимость = Истина;
		Элементы.Период.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеКонстант()
	
	ДанныеКонстант = ВКМ_ПроверкаДанныхДокумента.ПолучитьКонстантыНоменклатуры();
	
	Возврат ДанныеКонстант;
	
КонецФункции

&НаСервере
Функция ЗаполнитьНаСервере()
	
	ИмяФункции = "ВКМ_СозданиеАктовРеализации.ЗаполнитьСписокРеализацийПоДоговорам";
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьФункцию(УникальныйИдентификатор, ИмяФункции, Объект.Период);
	
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьОповещениеОЗавершении(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Статус = "Выполнено" Тогда
		ЗаполнитьТаблицуСписокДокументов(Результат);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Произошла ошибка. Создание актов не выполнено.");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСписокДокументов(Результат)
	
	ТаблицаДокументы = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	Объект.СписокДокументов.Очистить();
	
	Если ЗначениеЗаполнено(ТаблицаДокументы) Тогда
		Объект.СписокДокументов.Загрузить(ТаблицаДокументы);
		Объект.СписокДокументов.Сортировать("СписокДоговоров");
	Иначе
		СообщениеПользователю_ОтсутствиеАктов(Объект.Период);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СообщениеПользователю_ОтсутствиеАктов(ВыбранныйПериод)
	
	ПериодСообщение = Формат(ВыбранныйПериод, "ДФ='ММMM yyyy'");
	ТекстСообщения = СтрШаблон("За %1 года нет действующих договоров по которым не созданы акты", ПериодСообщение);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

#КонецОбласти





