
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
	//ВКМ_Захарова: Автозаполнение документа на основании в документе ОбслуживаниеКлиента
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВКМ_ОбслуживаниеКлиента") Тогда
		ВыполнитьАвтозаполнение(ДанныеЗаполнения);
	КонецЕсли;
	//ВКМ_Захарова
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//ВКМ_Захарова: Замечание №4. Доработать Отчет Анализ выставленных актов (суммы по работам из актов)
	СформироватьДвиженияРегистр_ВКМ_ВыполненныеКлиентуРаботы();
	//ВКМ_Захарова
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
//ВКМ_Захарова: Проверка при проведение документов на вид, период договора и на дублирование созданных актов за месяц
	
	ПроверитьДанныеДокумента(Отказ);
	
//ВКМ_Захарова
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	//ВКМ_Захарова: Заменить код (опечатка: не заполняются услуги)
	//УслугиОснования = Выборка.Услуги.Выбрать();
	//Пока ТоварыОснования.Следующий() Цикл
	//	ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	//КонецЦикла;
	//ВКМ_Захарова
	
	//ВКМ_Захарова: Замена кода (заполнить таблицу услуги)
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока УслугиОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	//ВКМ_Захарова
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

#Область ПроверитьДанныеДокумента
//ВКМ_Захарова: Проверка данных документа

Процедура ПроверитьДанныеДокумента(Отказ)
//ВКМ_Захарова: Проверка при проведение документов на договор абонент и на дублирование созданных актов за месяц
	
Если ЗначениеЗаполнено(Договор) Тогда
	
	ДанныеДоговора = ВКМ_ПроверкаДанныхДокумента.ПолучитьДанныеДоговора(Дата, Договор);
	
	Если ДанныеДоговора.ЭтоАбонентскоеОбслуживание Тогда
		
		Если ДанныеДоговора.ЭтоДействующийДоговор Тогда
			
			ДанныеКонстант = ВКМ_ПроверкаДанныхДокумента.ПолучитьКонстантыНоменклатуры();
			Если Не ДанныеКонстант.ЕстьКонстантыНоменклатуры Тогда
				ВывестиСообщение_ОтсутствиеКонстантНоменклатуры();
				Отказ = Истина;
			КонецЕсли;
			
			РезультатЗапроса = ПроверитьДублированиеАктовРеализации();
			Если Не РезультатЗапроса.Пустой() Тогда
				ВывестиСообщение_ДублированиеРеализации();
				Отказ = Истина;
			КонецЕсли;
			
		Иначе
			
			ВывестиСообщение_ПериодДоговора();
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;

//ВКМ_Захарова
КонецПроцедуры

Процедура ВывестиСообщение_ОтсутствиеКонстантНоменклатуры()
//ВКМ_Захарова: Вывести сообщение об отсутствии констант номенклатуры
	
	ТекстСообщения = "Заполните констаты номенклатуры для дальнейшего проведения документа";
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
//ВКМ_Захарова
КонецПроцедуры

Функция ПроверитьДублированиеАктовРеализации()
//ВКМ_Захарова: Проверка при проведение документов на вид, период договора и на дублирование созданных актов за месяц
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Договор = &Договор
	|	И РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачалаМесяца И &ДатаОкончанияМесяца
	|	И РеализацияТоваровУслуг.Проведен";
	
	Запрос.УстановитьПараметр("ДатаНачалаМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончанияМесяца", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
//ВКМ_Захарова
КонецФункции

Процедура ВывестиСообщение_ДублированиеРеализации()
//ВКМ_Захарова: Вывести сообщение о дублировании актов реализации
	
	ТекстСообщения = СтрШаблон("По договору: %1 уже создан акт реализации за %2 месяц. Для пересоздания акта отмените текущее проведение.",
		Договор, НРег(Формат(Дата, "ДФ=ММММ")));
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	
//ВКМ_Захарова
КонецПроцедуры

Процедура ВывестиСообщение_ПериодДоговора()
//ВКМ_Захарова: Вывести сообщение о несоответствии периода действия договора
	
	ДатаДокумента = Формат(Дата, "ДЛФ=DD");
	ТекстСообщения = СтрШаблон("Период действия договора не соответствует дате документа: %1", ДатаДокумента);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Договор);
	
//ВКМ_Захарова
КонецПроцедуры

//ВКМ_Захарова
#КонецОбласти

#Область АвтозаполнениеДокумента
//ВКМ_Захарова: Автозаполнение документа

Процедура ВыполнитьАвтозаполнение(ДанныеЗаполнения = Неопределено) Экспорт
//ВКМ_Захарова: Автозаполнение документа
	
	ДанныеКонстант = ВКМ_ПроверкаДанныхДокумента.ПолучитьКонстантыНоменклатуры();
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		
		Дата = ТекущаяДатаСеанса();
		ДанныеОбслуживаниеКлиентов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Клиент, Договор");
		Контрагент = ДанныеОбслуживаниеКлиентов.Клиент;
		Договор = ДанныеОбслуживаниеКлиентов.Договор;
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "Организация");
		Основание = ДанныеЗаполнения;
		ВыполнитьАвтозаполнениеДокумента(ДанныеКонстант);
		
	Иначе
		
		ВыполнитьАвтозаполнениеДокумента(ДанныеКонстант);
		ЗаполнитьРеквизитОснование();
		
	КонецЕсли;
	
//ВКМ_Захарова
КонецПроцедуры

Процедура ВыполнитьАвтозаполнениеДокумента(ДанныеКонстант)
//ВКМ_Захарова: Автозаполнение документа акта реализации
	
	Товары.Очистить();
	Услуги.Очистить();
	
	МесяцСозданияАкта = ВРег((Формат(Дата, "ДФ=ММММ")));
	
	ТекстКомментария = Новый Массив;
	ИнформацияОбАкте = СтрШаблон("Автоматическое создание акта за %1 месяц (%2)", МесяцСозданияАкта, Договор);
	ТекстКомментария.Добавить(ИнформацияОбАкте);
	
	ДанныеАбонентскаяПлата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты, ВКМ_СтоимостьЧасаРаботы");
	
	Если ЗначениеЗаполнено(ДанныеАбонентскаяПлата.ВКМ_СуммаАбонентскойПлаты) Тогда
		ЗаполнитьУслугиАбонентскаяПлата(ДанныеАбонентскаяПлата, ДанныеКонстант);
	Иначе
		ТекстКомментария.Добавить("Отсутствуют данные об абонентской плате в договоре");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеАбонентскаяПлата.ВКМ_СтоимостьЧасаРаботы) Тогда
		
		ДатаНачалаМесяца = НачалоМесяца(Дата);
		ДатаОкончанияМесяца = КонецМесяца(Дата);
		ДанныеВыполненныеРаботы = ПолучитьДанныеВыполненныеРаботы(ДатаНачалаМесяца, ДатаОкончанияМесяца, Договор);
		
		Если ДанныеВыполненныеРаботы.ЕстьРаботы Тогда
			ЗаполнитьУслугиВыполненныеРаботы(ДанныеАбонентскаяПлата, ДанныеВыполненныеРаботы, ДанныеКонстант);
		Иначе
			ТекстКомментария.Добавить("В данном месяце нет выполненных работ");
		КонецЕсли;
		
	Иначе
		
		ТекстКомментария.Добавить("Отсутствуют данные о работах специалистов в договоре.");
		
	КонецЕсли;
	
	ЗаполнитьКомментарийИСуммуДокумента(ТекстКомментария, МесяцСозданияАкта);
	
//ВКМ_Захарова
КонецПроцедуры

Процедура ЗаполнитьУслугиАбонентскаяПлата(ДанныеАбонентскаяПлата, ДанныеКонстант)
//ВКМ_Захарова: Заполнить таблицу услуги данными об абонентской плате
	
	НоваяСтрока = Услуги.Добавить();
	НоваяСтрока.Номенклатура = ДанныеКонстант.НоменклатураАбонентскаяПлата;
	НоваяСтрока.Количество = 1;
	НоваяСтрока.Цена = ДанныеАбонентскаяПлата.ВКМ_СуммаАбонентскойПлаты;;
	НоваяСтрока.Сумма = ДанныеАбонентскаяПлата.ВКМ_СуммаАбонентскойПлаты;
	
//ВКМ_Захарова
КонецПроцедуры

Функция ПолучитьДанныеВыполненныеРаботы(ДатаНачалаМесяца, ДатаОкончанияМесяца, Договор)
//ВКМ_Захарова: Получить данные о выполненных работах за месяц даты документа
	
	ДанныеВыполненныеРаботы = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0) КАК КоличествоЧасов,
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&ДатаНачалаМесяца, &ДатаОкончанияМесяца, Месяц, Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачалаМесяца", ДатаНачалаМесяца);
	Запрос.УстановитьПараметр("ДатаОкончанияМесяца", ДатаОкончанияМесяца);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДанныеВыполненныеРаботы.Вставить("ЕстьРаботы", Истина);
		ДанныеВыполненныеРаботы.Вставить("КоличествоЧасов", Выборка.КоличествоЧасов);
		ДанныеВыполненныеРаботы.Вставить("СуммаКОплате", Выборка.СуммаКОплате);
	Иначе
		ДанныеВыполненныеРаботы.Вставить("ЕстьРаботы", Ложь);
	КонецЕсли;
	
	Возврат ДанныеВыполненныеРаботы;
	
//ВКМ_Захарова
КонецФункции

Процедура ЗаполнитьУслугиВыполненныеРаботы(ДанныеАбонентскаяПлата, ДанныеВыполненныеРаботы, ДанныеКонстант)
//ВКМ_Захарова: Заполнить таблицу услуги данными о выполненных работах
	
	НоваяСтрока = Услуги.Добавить();
	НоваяСтрока.Номенклатура = ДанныеКонстант.НоменклатураРаботыСпециалиста;
	НоваяСтрока.Количество = ДанныеВыполненныеРаботы.КоличествоЧасов;
	НоваяСтрока.Сумма = ДанныеВыполненныеРаботы.СуммаКОплате;
	Если ДанныеВыполненныеРаботы.КоличествоЧасов = 0 Тогда
		НоваяСтрока.Цена = ДанныеАбонентскаяПлата.ВКМ_СтоимостьЧасаРаботы;
	Иначе
		НоваяСтрока.Цена = ДанныеВыполненныеРаботы.СуммаКОплате / ДанныеВыполненныеРаботы.КоличествоЧасов;
	КонецЕсли;
	
//ВКМ_Захарова
КонецПроцедуры

Процедура ЗаполнитьКомментарийИСуммуДокумента(ТекстКомментария, МесяцСозданияАкта)
//ВКМ_Захарова: Заполнить реквизиты: Комментарий, СуммаДокумента
	
	Если ЗначениеЗаполнено(Услуги) Тогда
		Комментарий = СтрСоединить(ТекстКомментария, ". ");
	Иначе
		ШаблонКомментария = СтрШаблон("Отсутствуют данные об абонентской плате и работах за %1 месяц.", МесяцСозданияАкта);
		Комментарий = ШаблонКомментария;
	КонецЕсли;
	
	СуммаДокумента = Услуги.Итог("Сумма");
	
//ВКМ_Захарова
КонецПроцедуры

Процедура ЗаполнитьРеквизитОснование()
//ВКМ_Захарова: Заполнить реквизит Основание
	
	МесяцСозданияАкта = ВРег((Формат(Дата, "ДФ=ММММ")));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВКМ_ОбслуживаниеКлиента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Дата МЕЖДУ &ДатаНачалаМесяцаДокумента И &ДатаОкончанияМесяцаДокумента
	|	И ВКМ_ОбслуживаниеКлиента.Проведен
	|	И НЕ ВКМ_ОбслуживаниеКлиента.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДатаНачалаМесяцаДокумента", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончанияМесяцаДокумента", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Основание = Выборка.Ссылка;
	Иначе
		ТекстСообщения = СтрШаблон("За %1 месяц нет документов по обслуживанию клиентов. Для проведения можете выбрать документ обслуживания за другой месяц в качестве основания", МесяцСозданияАкта);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "Объект.Основание");
	КонецЕсли;
	
//ВКМ_Захарова
КонецПроцедуры

//ВКМ_Захарова
#КонецОбласти

Процедура СформироватьДвиженияРегистр_ВКМ_ВыполненныеКлиентуРаботы()
//ВКМ_Захарова: Замечание №4. Доработать Отчет Анализ выставленных актов (суммы по работам из актов)
	
	Если ЗначениеЗаполнено(Договор) Тогда
		
		ДанныеДоговора = ВКМ_ПроверкаДанныхДокумента.ПолучитьДанныеДоговора(Дата, Договор);
		
		Если ДанныеДоговора.ЭтоАбонентскоеОбслуживание Тогда
			
			Если ДанныеДоговора.ЭтоДействующийДоговор Тогда
				
				Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
				ДанныеКонстант = ВКМ_ПроверкаДанныхДокумента.ПолучитьКонстантыНоменклатуры();
				
				Для Каждого СтрокаУслуги Из Услуги Цикл
					
					Если ДанныеКонстант.НоменклатураРаботыСпециалиста = СтрокаУслуги.Номенклатура Тогда
						Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.ДобавитьРасход();
						Движение.Период = Дата;
						Движение.Клиент = Контрагент;
						Движение.Договор = Договор;
						Движение.КоличествоЧасов = СтрокаУслуги.Количество;
						Движение.СуммаКОплате = СтрокаУслуги.Сумма;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

//ВКМ_Захарова
КонецПроцедуры

#КонецОбласти

#КонецЕсли
