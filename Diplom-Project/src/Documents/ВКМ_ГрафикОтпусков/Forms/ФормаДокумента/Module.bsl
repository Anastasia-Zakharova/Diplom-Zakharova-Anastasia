
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьРеквизитВыборГод();
	
	УстановитьКоличествоДнейОтпуска();
	
	УстановитьУсловноеОформлениеТаблицыОтпускаСотрудников();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВыбранныйГод();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	
	УстановитьКоличествоДнейОтпуска();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	
	УстановитьКоличествоДнейОтпуска();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПлюсГод(Команда)
	
	ВыборГод = ВыборГод + 1;
	ОбновитьВыбранныйГод();
	
КонецПроцедуры

&НаКлиенте
Процедура МинусГод(Команда)
	
	ВыборГод = ВыборГод - 1;
	ОбновитьВыбранныйГод();
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиГрафикОтпусков(Команда)
	
	СтрутураПараметров = Новый Структура;
	ДанныеПараметров = ПоместитьДанныеВоВременноеХранилище();
	СтрутураПараметров.Вставить("ДанныеПараметров", ДанныеПараметров); 
	
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.ФормаАнализГрафика", СтрутураПараметров, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьРеквизитВыборГод()
	
	ВыборГод = Год(ТекущаяДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыбранныйГод()
	
	Объект.Год = Дата(ВыборГод, 1, 1);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКоличествоДнейОтпуска()
	
	Если Объект.ОтпускаСотрудников.Количество() <> 0 Тогда
		
		СекундВСутках = 60 * 60 * 24;
		ПустаяДата = Дата(1, 1, 1);
		
		Для Каждого Строка Из Объект.ОтпускаСотрудников Цикл
			
			Если Строка.ДатаНачала <> ПустаяДата И Строка.ДатаОкончания <> ПустаяДата Тогда
				ДатаНачалаОтпуска = НачалоДня(Строка.ДатаНачала);
				ДатаОкончанияОтпуска = КонецДня(Строка.ДатаОкончания);
				Строка.КоличествоДней = (ДатаОкончанияОтпуска - ДатаНачалаОтпуска) / СекундВСутках;
				Если Строка.КоличествоДней < 0 Тогда
					ТекстСообщения = СтрШаблон("Неправильно задан период отпуска для %1", Строка.Сотрудник);
					ПолеСообщения = СтрШаблон("Объект.ОтпускаСотрудников[%1].Сотрудник", Строка.НомерСтроки - 1);;
					ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, ПолеСообщения);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеТаблицыОтпускаСотрудников()
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.КоличествоДней"); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение = 28;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.ГолубойСКраснымОттенком);
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);

	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудников");
	ПолеОформления.Использование = Истина;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьДанныеВоВременноеХранилище()
	
	СтруктураДанных = Новый Структура();
	СтруктураДанных.Вставить("Год", Объект.Год); 
	СтруктураДанных.Вставить("ТаблицаОтпускаСотрудников", Объект.ОтпускаСотрудников.Выгрузить());
	
	ДанныеПараметров = ПоместитьВоВременноеХранилище(СтруктураДанных, Новый УникальныйИдентификатор);
	
	Возврат ДанныеПараметров;
	
КонецФункции

#КонецОбласти