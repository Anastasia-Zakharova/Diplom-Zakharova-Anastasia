
#Область ПрограммныйИнтерфейс

// Отправить HTTPЗапрос.
// 
// Параметры:
//  ИмяМетода - Строка - ИмяМетода
//  ПараметрыМетода - Неопределено -  Параметры метода
//  ДанныеМетода - Неопределено -  Данные метода
// 
// Возвращаемое значение:
//  Строка, Неопределено -  Отправить HTTPЗапрос
Функция ОтправитьHTTPЗапрос(ИмяМетода, ПараметрыМетода = Неопределено, ДанныеМетода = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Попытка
		
		АдресТелеграм = "api.telegram.org";
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
		
		СоединениеHTTP = Новый HTTPСоединение(АдресТелеграм, 443,,,,,ЗащищенноеСоединение);
		
		ТокенТелеграмБот = ВКМ_СлужебныеТелеграм.ПолучитьТокенТелеграмБот();
		
		ПараметрыЗапроса = Новый Соответствие;
		ПараметрыЗапроса.Вставить("token", ТокенТелеграмБот);
		ПараметрыЗапроса.Вставить("method", ИмяМетода);
		ПараметрыЗапроса.Вставить("method_param", ПараметрыМетода);
		
		ЗапросHTTP = Новый HTTPЗапрос;
		
		Если ДанныеМетода = Неопределено Тогда
			
			ЗапросHTTP.Заголовки.Вставить("Content-type", "application/json");
			
		Иначе
			
			ТекстЗапроса = СформироватьТелоЗапроса(ДанныеМетода);
			
			ЗапросHTTP.УстановитьТелоИзДвоичныхДанных(ТекстЗапроса);
			
			ТипКонтента = СтрШаблон("multipart/form-data; boundary=%1", ДанныеМетода["Boundary"]);
			ЗапросHTTP.Заголовки.Вставить("Content-Type", ТипКонтента);
			
			ДлинаСодержимого = Формат(ТекстЗапроса.Размер(), "ЧДЦ=0; ЧН=0; ЧГ=0");
			ЗапросHTTP.Заголовки.Вставить("Content-Length", ДлинаСодержимого);
			
		КонецЕсли;
		
		ЗапросHTTP.АдресРесурса = СформироватьМетод(ПараметрыЗапроса);
		
		Если ДанныеМетода = Неопределено Тогда
			ОтветHTTP = СоединениеHTTP.Получить(ЗапросHTTP);
		Иначе
			ОтветHTTP = СоединениеHTTP.ОтправитьДляОбработки(ЗапросHTTP);
		КонецЕсли;
		
		Если ОтветHTTP.КодСостояния = 200 Тогда
			Результат = ОтветHTTP.ПолучитьТелоКакСтроку();
		Иначе
			РегистрыСведений.ВКМ_ЛогиТелеграм.ЛогHTTP(ОтветHTTP);
			ИмяСобытия = "ОтправитьHTTPЗапрос.ЛогHTTP";
			ТекстКомментария = "Подробности в Регистре Сведений: Логи Телеграм (для разработчиков)";
			ВКМ_СлужебныеТелеграм.СоздатьЗаписьВЖурналеРегистрации(ИмяСобытия, ТекстКомментария);
		КонецЕсли;
		
	Исключение
		
		РегистрыСведений.ВКМ_ЛогиТелеграм.ЗаписатьОшибку(ИнформацияОбОшибке(), Истина);
		ИмяСобытия = "ОтправитьHTTPЗапрос.ИнформацияОбОшибке";
		ТекстКомментария = "Подробности в Регистре Сведений: Логи Телеграм (для разработчиков)";
		ВКМ_СлужебныеТелеграм.СоздатьЗаписьВЖурналеРегистрации(ИмяСобытия, ТекстКомментария);
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьТелоЗапроса(Данные)
	
	ПотокДанных = Новый ПотокВПамяти();
	Кодировка = КодировкаТекста.UTF8;
	Порядок = ПорядокБайтов.LittleEndian;
	РазделительСтрок = Символы.ВК + Символы.ПС;
	КонвертируемыйРазделительСтрок = Символы.ПС;
	
	ЗаписьДанных = Новый ЗаписьДанных(ПотокДанных, Кодировка, Порядок, РазделительСтрок,
		КонвертируемыйРазделительСтрок, Истина);
	
	ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("--%1", Данные["Boundary"]));
	ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("Content-Disposition: form-data; name=""%1""; filename=""%2""", Данные["name"], Данные["ИмяФайла"]));
	ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("Content-Type:%1", Данные["Content-Type"]));
	ЗаписьДанных.ЗаписатьСтроку("");
	
	ДвоичныеДанные = Новый ДвоичныеДанные(Данные["ИмяФайлаПолное"]);
	ЗаписьДанных.Записать(ДвоичныеДанные);
	
	ЗаписьДанных.ЗаписатьСтроку("");
	ЗаписьДанных.ЗаписатьСтроку(СтрШаблон("--%1--", Данные["Boundary"]));
	ЗаписьДанных.Закрыть();
	
	ДанныеТела = ПотокДанных.ЗакрытьИПолучитьДвоичныеДанные();
	
	Возврат ДанныеТела;
	
КонецФункции

Функция СформироватьМетод(ПараметрыЗапроса)
	
	АдресРесурса = "";
	ПараметрыМетода = "";
	
	// Переделать формирование строки с методом и параметрами под конкретный API
	Если ЗначениеЗаполнено(ПараметрыЗапроса["method_param"]) Тогда
		
		СтрокиПараметров = Новый Массив;
		
		Для Каждого Строка Из ПараметрыЗапроса["method_param"] Цикл
			
			Если НЕ ЗначениеЗаполнено(Строка.Значение) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиПараметров.Добавить(СтрШаблон("%1=%2", Строка.Ключ, Строка.Значение));
			
		КонецЦикла;
		
		ПараметрыМетода = СтрСоединить(СтрокиПараметров, "&");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыМетода) Тогда
		АдресРесурса = СтрШаблон("bot%1/%2?%3", ПараметрыЗапроса["token"], ПараметрыЗапроса["method"], ПараметрыМетода);
	Иначе
		АдресРесурса = СтрШаблон("bot%1/%2", ПараметрыЗапроса["token"], ПараметрыЗапроса["method"]); 
	КонецЕсли;
	
	Возврат АдресРесурса;
	
КонецФункции

#КонецОбласти