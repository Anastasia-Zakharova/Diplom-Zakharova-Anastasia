
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Очистить журнал результатов.
Процедура ОчиститьЖурналРезультатов() Экспорт
	
	Набор = СоздатьНаборЗаписей();
	Набор.Записать();
	
КонецПроцедуры

// Записать ошибку.
// 
// Параметры:
//  ИнформацияОбОшибке - Неопределено -  Информация об ошибке
//  ЛогОбязательно - Булево -  Лог обязательно
Процедура ЗаписатьОшибку(ИнформацияОбОшибке = Неопределено, ЛогОбязательно = Ложь) Экспорт
	
	Если ИнформацияОбОшибке = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЛогОбязательно = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ТипСообщения = Перечисления.ВКМ_ТипыСообщенийТелеграм.Ошибка;
	Контекст = СтрШаблон("Имя Модуля: %1. Номер строки: %2.", ИнформацияОбОшибке.ИмяМодуля, ИнформацияОбОшибке.НомерСтроки);
	Данные = ИнформацияОбОшибке.Описание;
	
	ДобавитьЗапись(ТипСообщения, Контекст, Данные);
	
КонецПроцедуры

// Лог HTTP.
// 
// Параметры:
//  ДанныеHTTP - HTTPЗапрос, HTTPОтвет, HTTPСервисЗапрос - Данные HTTP
// 
// Возвращаемое значение:
//  Строка -  Лог HTTP
Функция ЛогHTTP(ДанныеHTTP) Экспорт
	
	ИнформацияТелеграм = "";
	
	Если ТипЗнч(ДанныеHTTP) = Тип("HTTPЗапрос") Тогда
		ИнформацияТелеграм = СформироватьДанныеHTTPЗапроса(ДанныеHTTP);
	ИначеЕсли ТипЗнч(ДанныеHTTP) = Тип("HTTPОтвет") Тогда
		ИнформацияТелеграм = СформироватьДанныеHTTPОтвета(ДанныеHTTP);
	ИначеЕсли ТипЗнч(ДанныеHTTP) = Тип("HTTPСервисЗапрос") Тогда
		ИнформацияТелеграм = СформироватьДанныеHTTPЗапроса(ДанныеHTTP);
	КонецЕсли;
	
	ТипСообщения = Перечисления.ВКМ_ТипыСообщенийТелеграм.ДанныеHTTP;
	Контекст = "Лог HTTP";
	Данные = ИнформацияТелеграм;
	
	ДобавитьЗапись(ТипСообщения, Контекст, Данные);
	
	Возврат ИнформацияТелеграм;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьДанныеHTTPЗапроса(ЗапросHTTP)
	
	МетодHTTP = СтрШаблон("Метод HTTP: %1", ЗапросHTTP.HTTPМетод);
	БазовыйURL = СтрШаблон("Базовый URL: %1", ЗапросHTTP.БазовыйURL);
	
	Заголовки_JSON = ВКМ_СлужебныеТелеграм.СформироватьJSON(ЗапросHTTP.Заголовки, Истина);
	Заголовки = СтрШаблон("Заголовки: %1%2", Символы.ПС, Заголовки_JSON);
	
	ОтносительныйURL = СтрШаблон("Относительный URL: %1", ЗапросHTTP.ОтносительныйURL);
	
	ПараметрыURL_JSON = ВКМ_СлужебныеТелеграм.СформироватьJSON(ЗапросHTTP.ПараметрыURL, Истина);
	ПараметрыURL = СтрШаблон("Параметры URL: %1%2", Символы.ПС, ПараметрыURL_JSON);
	
	ПараметрыЗапроса_JSON = ВКМ_СлужебныеТелеграм.СформироватьJSON(ЗапросHTTP.ПараметрыЗапроса, Истина);
	ПараметрыЗапроса = СтрШаблон("Параметры URL: %1%2", Символы.ПС, ПараметрыЗапроса_JSON);
	
	ТелоЗапроса_ДанныеJSON = ВКМ_СлужебныеТелеграм.ОбработатьJSON(ЗапросHTTP.ПолучитьТелоКакСтроку());
	ТелоЗапроса_JSON = ВКМ_СлужебныеТелеграм.СформироватьJSON(ТелоЗапроса_ДанныеJSON, Истина);
	ТелоЗапроса = СтрШаблон("Тело Запроса: %1%2", Символы.ПС, ТелоЗапроса_JSON);
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(МетодHTTP);
	МассивСтрок.Добавить(БазовыйURL);
	МассивСтрок.Добавить(Заголовки);
	МассивСтрок.Добавить(ОтносительныйURL);
	МассивСтрок.Добавить(ПараметрыURL);
	МассивСтрок.Добавить(ПараметрыЗапроса);
	МассивСтрок.Добавить(ТелоЗапроса);
	
	ДанныеHTTPЗапроса = СтрСоединить(МассивСтрок, Символы.ПС);
	
	Возврат ДанныеHTTPЗапроса;
	
КонецФункции

Функция СформироватьДанныеHTTPОтвета(ОтветHTTP)
	
	КодСостояния = СтрШаблон("КодСостояния: %1", ОтветHTTP.КодСостояния);
	
	Заголовки_JSON = ВКМ_СлужебныеТелеграм.СформироватьJSON(ОтветHTTP.Заголовки, Истина);
	Заголовки = СтрШаблон("Заголовки: %1%2", Символы.ПС, Заголовки_JSON);
	
	ТелоОтвета_ДанныеJSON = ВКМ_СлужебныеТелеграм.ОбработатьJSON(ОтветHTTP.ПолучитьТелоКакСтроку());
	ТелоОтвета_JSON = ВКМ_СлужебныеТелеграм.СформироватьJSON(ТелоОтвета_ДанныеJSON, Истина);
	ТелоОтвета = СтрШаблон("Тело Ответа: %1%2", Символы.ПС, ТелоОтвета_JSON);
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(КодСостояния);
	МассивСтрок.Добавить(Заголовки);
	МассивСтрок.Добавить(ТелоОтвета);
	
	ДанныеHTTPОтвет = СтрСоединить(МассивСтрок, Символы.ПС);
	
	Возврат ДанныеHTTPОтвет
	
КонецФункции

Процедура ДобавитьЗапись(ТипСообщения, Контекст, Данные)
	
	Если ЗначениеЗаполнено(Данные) Тогда
		
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ТекущаяДатаСеанса();
		МенеджерЗаписи.ТипСообщения = ТипСообщения;
		МенеджерЗаписи.Контекст = Контекст;
		МенеджерЗаписи.Данные = Данные;
		МенеджерЗаписи.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
